{"version":3,"file":"static/js/83.06232b44.chunk.js","mappings":"mPAKO,MAAMA,EAAQ,IAAIC,MAAM,KAAKC,KAAI,CAACC,EAAGC,KAAK,CAC/CC,GAAIC,EAAAA,GAAMC,OAAOC,OACjBC,UAAW,iCAAiCL,EAAQ,QACpDM,KAAMJ,EAAAA,GAAMK,OAAOC,WACnBC,QAASP,EAAAA,GAAMO,QAAQH,OACvBI,WAAYR,EAAAA,GAAMS,SAASC,UAC3BC,QAAQC,EAAAA,EAAAA,QAAO,CAAC,SAAU,WAC1BC,MAAMD,EAAAA,EAAAA,QAAO,CACX,SACA,aACA,cACA,cACA,iBACA,kBACA,oBACA,sBACA,sBACA,6B,gECbW,SAASE,EAAWC,GAAa,IAAZ,MAAEC,GAAOD,EAC3C,OACEE,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAAAC,UACPF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,SAASC,QAAS,EAAGC,GAAI,CAAEC,GAAI,GAAIL,UAClDM,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJH,GAAI,CACFI,UAAW,UACXR,SAAA,EAEFF,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAACC,QAAQ,KAAKC,WAAS,EAAAX,SAAC,eAInCM,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACC,QAAQ,QAAOV,SAAA,CAAC,6BAE1BM,EAAAA,EAAAA,MAAA,UAAAN,SAAA,CAAQ,IAAOH,EAAM,OAAe,KACpCC,EAAAA,EAAAA,KAAA,SAAM,4DAMlB,C,iEC1B2Bc,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAYhB,IAA4B,IAA3B,MAAEkB,EAAK,WAAEC,GAAYnB,EAC3D,MAAMoB,EAAmC,UAAvBF,EAAMG,QAAQC,KAE1BC,EAAuC,WAAvBJ,EAAWL,QAE3BU,EAAyC,aAAvBL,EAAWL,QAE7BW,EAAqC,SAAvBN,EAAWL,QAEzBY,EAAe,IACM,YAArBP,EAAWQ,OAAuB,IAEhCJ,GAAiB,CACnBI,MAAOP,EAAYF,EAAMG,QAAQO,OAAOC,MAAQX,EAAMG,QAAQS,KAAK,KACnEC,gBAAiBb,EAAMG,QAAQW,KAAKC,YAGlCT,GAAmB,CACrBO,gBAAiB,cACjBJ,MAAOT,EAAMG,QAAQW,KAAKC,QAC1BC,OAAQ,aAAahB,EAAMG,QAAQW,KAAKC,cAGtCR,GAAe,CACjBE,MAAOT,EAAMG,QAAQW,KAAKG,UAC1BJ,iBAAiBK,EAAAA,EAAAA,IAAMlB,EAAMG,QAAQS,KAAK,KAAM,QAKhDO,EAAa,IACQ,YAArBlB,EAAWQ,OAAuB,IAEhCJ,GAAiB,CACnBI,MAAOT,EAAMG,QAAQF,EAAWQ,OAAOW,aACvCP,gBAAiBb,EAAMG,QAAQF,EAAWQ,OAAOY,SAG/Cf,GAAmB,CACrBO,gBAAiB,cACjBJ,MAAOT,EAAMG,QAAQF,EAAWQ,OAAOY,KACvCL,OAAQ,aAAahB,EAAMG,QAAQF,EAAWQ,OAAOY,WAGnDd,GAAe,CACjBE,MAAOT,EAAMG,QAAQF,EAAWQ,OAAOP,EAAY,OAAS,SAC5DW,iBAAiBK,EAAAA,EAAAA,IAAMlB,EAAMG,QAAQF,EAAWQ,OAAOY,KAAM,QAKnE,MAAO,CACLC,OAAQ,GACRC,SAAU,GACVC,WAAY,EACZC,aAAc,EACdC,OAAQ,UACRC,WAAY,SACZC,WAAY,SACZC,QAAS,cACTC,eAAgB,SAChBC,cAAe,aACfC,QAAShC,EAAMiC,QAAQ,EAAG,KAC1BC,SAAUlC,EAAMmC,WAAWC,QAAQ,IACnCC,WAAYrC,EAAMmC,WAAWG,eAC7BC,WAAYvC,EAAMwC,YAAYC,OAAO,MAAO,CAC1CC,SAAU1C,EAAMwC,YAAYE,SAASC,aAEpCnC,KACAW,EACJ,I,sDCnEH,QAAerC,IASR,IATS,OACd8D,EAAM,MACNC,EAAK,KACLC,EAAI,KACJ3E,EAAI,MACJ4E,EAAK,MACLC,EAAK,IACLC,EAAG,WACHC,GACDpE,EACC,MAAOqE,EAAMC,IAAWC,EAAAA,EAAAA,WAAS,GAIjC,OACE7D,EAAAA,EAAAA,MAAA,OAAAN,SAAA,EACEF,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,CAAC1D,QAAQ,WAAW2D,QALZC,IAAMJ,GAAQ,GAKkBlE,SAAC,aAIhDF,EAAAA,EAAAA,KAACyE,EAAAA,EAAK,CACJN,KAAMA,EACNO,QAVcC,IAAMP,GAAQ,GAW5B,kBAAgB,oBAChB,mBAAiB,0BAAyBlE,UAG1CM,EAAAA,EAAAA,MAACO,EAAAA,EAAG,CAACT,GAAIsE,EAAM1E,SAAA,EACbF,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CAAC7B,GAAG,oBAAoB8B,QAAQ,KAAKiE,UAAU,KAAI3E,SAC3Df,KAGHa,EAAAA,EAAAA,KAAC8E,EAAAA,EAAO,CACNxE,GAAI,CACFyE,YAAa,QACbC,YAAa,MACbhC,QAAS,MACTnB,gBAAiB,UACjBoD,aAAc,QAEhBC,YAAY,WACZC,UAAQ,KAGV3E,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,UAAc,MAAI8D,MAE5BxD,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,UAAc,MAAI6D,MAE5BvD,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,QAAY,MAAI+D,MAE1BzD,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,SAAa,KAAS,OAAN0D,QAAM,IAANA,OAAM,EAANA,EAAQwB,cAElC5E,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,UAAc,QAAM2D,GAAOwB,QAAQ,GAAG,aAEhD7E,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,eAAmB,KAAG,IAC7BoF,IACQ,OAAN1B,QAAM,IAANA,OAAM,EAANA,EAAQ2B,WAAY,KAAMF,QAAQ,GAC7B,OAANzB,QAAM,IAANA,OAAM,EAANA,EAAQ4B,cAGP,OAAJ1B,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,0BACLjF,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,4BAAgC,KAAG,IACtC,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,2BAIN,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,sBACLlF,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,yBAA6B,MAAQ,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,uBAG9C,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,UACLnF,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,WAAe,MAAQ,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,WAGhC,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,eACLpF,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,gBAAoB,MAAQ,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,iBAIxC1B,IAAc1D,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxCF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,eAAmB,MAAIgE,OAG3B,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,oBAAgD,IAAvB,OAAJ/B,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,sBACjCrF,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,KAAI3E,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,uBAA2B,MAAQ,OAAJ4D,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,sBAIjD7F,EAAAA,EAAAA,KAACW,EAAAA,EAAU,CACT7B,GAAG,0BACHgH,UAAU,kBACVxF,GAAI,CAAEyF,GAAI,YAMrB,EAEKnB,EAAQ,CACZoB,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,QAAS,mBACTpE,OAAQ,iBACRqE,UAAW,GACXC,EAAG,EACHzD,QAAS,OACT0D,IAAK,EACLC,cAAe,SACf/D,aAAc,EACdgE,UAAW,OACXC,UAAW,SACXC,UAAW,SACXC,gBAAiB,OACjBC,eAAgB,OAChB,sBAAuB,CACrBhE,QAAS,SAIb,SAASyC,EAAWwB,EAAGC,GACrB,IAAIC,GAAWF,EACf,IAAItB,GAAYuB,EAEhB,IACsB,kBAAZC,GAAwBA,EAAU,IACtB,kBAAbxB,EAEP,MAAO,iBAGa,kBAAZwB,GAAwBA,EAAU,GAAKC,MAAMD,KAClC,iBAAZxB,IAEPwB,EAAUxB,GASZ,MADsB,GAJR0B,KAAKC,MAAMH,EAAU,UACnBE,KAAKC,MAAOH,EAAU,KAAQ,QACrBA,EAAU,KAIrC,CC9Ie,SAASI,EAAYtH,GAehC,IAfiC,SACnCuH,EAAQ,KACRlI,EAAI,MACJ6E,EAAK,MACLD,EAAK,KACLuD,EAAI,OACJ1D,EAAM,MACNC,EAAK,KACL0D,EAAI,GACJzI,EAAE,YACF0I,EAAW,IACXvD,EAAG,WACHC,EAAU,UACVuD,EAAS,KACT3D,GACDhE,EACC,MAAM4H,GAAWC,EAAAA,EAAAA,OAEVxD,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,MAM3BuD,EAAkBA,KACtBxD,EAAQ,KAAK,EAGf,OACE5D,EAAAA,EAAAA,MAAAqH,EAAAA,SAAA,CAAA3H,SAAA,EACEM,EAAAA,EAAAA,MAACP,EAAAA,EAAQ,CAAC6H,OAAK,EAACC,UAAW,EAAGnI,KAAK,WAAWyH,SAAUA,EAASnH,SAAA,EAY/DF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,SAAQF,SAAEf,KAE3Ba,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,SAAQF,SAAQ,OAAN0D,QAAM,IAANA,OAAM,EAANA,EAAQwB,aAEnCpF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,SAAQF,WAAI2D,GAAOwB,QAAQ,MAE5CrF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,SAAQF,SAAEoH,KAC3BtH,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,SAAQF,SAAEuH,KAM3BzH,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,SAAQF,UACvBF,EAAAA,EAAAA,KAACgI,EAAU,CACTlJ,GAAIA,EACJiF,MAAOA,EACPD,KAAMA,EACNF,OAAQA,EACRC,MAAOA,EAEPG,MAAOA,EACPC,IAAKA,EACLC,WAAYA,EACZ/E,KAAMA,OAIVa,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACC,MAAM,QAAOF,UACtBF,EAAAA,EAAAA,KAACiI,EAAAA,EAAU,CAAC1D,QAnDI2D,IACtB9D,EAAQ8D,EAAMC,cAAc,EAkDcjI,UAClCF,EAAAA,EAAAA,KAACoI,EAAAA,EAAO,CAACC,KAAK,mCAKpBrI,EAAAA,EAAAA,KAACsI,EAAAA,GAAO,CACNnE,OAAQA,EACRoE,SAAUpE,EACVO,QAASkD,EACTY,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChDE,WAAY,CACVtI,GAAI,CAAEuI,MAAO,MACb3I,UAEFF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAQ,CAACvE,QAASqD,EAAiBtH,GAAI,CAAEmB,MAAO,cAAevB,UAC9DF,EAAAA,EAAAA,KAAA,UACE8F,UAAU,uCACVvB,QAASA,KAEPmD,GAASqB,EAAAA,EAAAA,IAAWjK,GAAI,EACxBoB,UAEFM,EAAAA,EAAAA,MAAAqH,EAAAA,SAAA,CAAA3H,SAAA,EACEF,EAAAA,EAAAA,KAACoI,EAAAA,EAAO,CAACC,KAAK,sBAAsB/H,GAAI,CAAE0I,GAAI,KAAO,oBAQnE,C,wBC/HO,MAAMC,EAAiB,CAC5BjH,OAAQ,EACRkH,QAAS,EACTlG,QAAS,EACT6F,MAAO,MACPvG,OAAQ,MACR6G,SAAU,SACVnD,SAAU,WACVpD,WAAY,SACZwG,KAAM,iBAGD,SAASC,EAAUC,EAAMC,EAAaC,GAC3C,OAAOF,EAAOpC,KAAKuC,IAAI,GAAI,EAAIH,GAAQC,EAAcC,GAAe,CACtE,CCDe,SAASE,EAAa5J,GAQjC,IARkC,MACpC6J,EAAK,QACLC,EAAO,SACPC,EAAQ,UACRC,EAAS,YACTC,EAAW,cACXC,EAAa,iBACbC,GACDnK,EAKC,OACEE,EAAAA,EAAAA,KAACkK,EAAAA,EAAS,CAAAhK,UACRF,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CAAAC,SACN4J,EAAUnL,KAAKwL,IACdnK,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAERC,MAAO+J,EAAS/J,OAAS,SACzBgK,cAAeR,IAAYO,EAASrL,IAAK6K,EACzCrJ,GAAI,CAAEuI,MAAOsB,EAAStB,MAAOtG,SAAU4H,EAAS5H,UAAWrC,UAE3DM,EAAAA,EAAAA,MAAC6J,EAAAA,EAAc,CACbC,cAAY,EACZC,OAAQX,IAAYO,EAASrL,GAC7B0L,UAAWZ,IAAYO,EAASrL,GAAK6K,EAAQ,MAC7CpF,QAASA,KACPyF,EAAcG,EAASrL,GAAG,EAC1BoB,SAAA,CAEDiK,EAASM,MACTb,IAAYO,EAASrL,IACpBkB,EAAAA,EAAAA,KAACe,EAAAA,EAAG,CAACT,GAAI,IAAK2I,GAAiB/I,SAClB,SAAVyJ,EAAmB,oBAAsB,qBAE1C,SAlBDQ,EAASrL,SAyB1B,CCjDe,SAAS4L,EAAc5K,GAAyB,IAAxB,UAAEuJ,EAAS,OAAE/G,GAAQxC,EAC1D,OAAKuJ,GAKHrJ,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPK,GAAI,IACEgC,GAAU,CACZA,OAAQA,EAAS+G,IAEnBnJ,UAEFF,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CAACE,QAAS,MAXf,IAcX,C,2CCmCO,SAASsK,EAAgB7D,EAAGC,GACjC,IAAIC,GAAWF,EACf,IAAItB,GAAYuB,EAEhB,IACsB,kBAAZC,GAAwBA,EAAU,IACtB,kBAAbxB,EAEP,MAAO,iBAGa,kBAAZwB,GAAwBA,EAAU,GAAKC,MAAMD,KAClC,iBAAZxB,IAEPwB,EAAUxB,EACVoF,QAAQC,IAAI7D,EAASxB,IAQvB,MADsB,GAJR0B,KAAKC,MAAMH,EAAU,UACnBE,KAAKC,MAAOH,EAAU,KAAQ,QACrBA,EAAU,KAIrC,C,cChFA,MAYA,EAZqB8D,IACnB,MAAMC,EAAYC,EAAAA,GAAWC,cAAcH,GACrCI,EAAWF,EAAAA,GAAWG,SAASL,GACrCE,EAAAA,GAAWI,kBAAkBF,EAAUH,EAAW,QAElDC,EAAAA,GAAWE,EAAU,CAAEG,SAAU,OAAQC,KAAM,WAE/CN,EAAAA,GAAWE,EAAU,CAAEG,SAAU,OAAQC,KAAM,WAE/CN,EAAAA,GAAeE,EAAU,cAAc,ECQ1B,SAASK,EAAgBzL,GAIpC,IAJqC,YACvCiK,EAAW,WACXyB,EAAU,aACVC,GACD3L,EACC,MAAM,MAAErB,IAAUiN,EAAAA,EAAAA,KAAa5E,GAAMA,EAAEhD,QAEhC6H,EAAWC,IAAgBvH,EAAAA,EAAAA,YAkClC,OACE7D,EAAAA,EAAAA,MAACqL,EAAAA,EAAO,CACNvL,GAAI,CACFgC,OAAQ,GACRO,QAAS,OACTC,eAAgB,gBAChBwD,EAAItF,GAAUA,EAAMiC,QAAQ,EAAG,EAAG,EAAG,MACjC8G,EAAc,GAAK,CACrBtI,MAAO,eACP2E,QAAS,oBAEXlG,SAAA,CAED6J,EAAc,GACbvJ,EAAAA,EAAAA,MAACG,EAAAA,EAAU,CAACkE,UAAU,MAAMjE,QAAQ,YAAWV,SAAA,CAC5C6J,EAAY,gBAGfvJ,EAAAA,EAAAA,MAAA,OAAKoE,MAAO,CAAE/B,QAAS,OAAQF,WAAY,SAAU4D,IAAK,QAASrG,SAAA,EACjEF,EAAAA,EAAAA,KAAC8L,EAAAA,EAAS,CACRC,MAAOJ,EACPK,SAAWC,IACTL,EAAaK,EAAEC,OAAOH,MAAM,EAE9BI,YAAY,oBAEdnM,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,CACLC,QAASA,KACPkH,EAAaE,EAAU,EAEzB/K,QAAQ,WAAUV,SACnB,cAMJ6J,EAAc,GACb/J,EAAAA,EAAAA,KAACoM,EAAAA,EAAO,CAACC,MAAM,SAAQnM,UACrBF,EAAAA,EAAAA,KAACiI,EAAAA,EAAU,OAGbjI,EAAAA,EAAAA,KAACoM,EAAAA,EAAO,CAACC,MAAM,cAAanM,UAC1BF,EAAAA,EAAAA,KAACiI,EAAAA,EAAU,OAKfjI,EAAAA,EAAAA,KAACsE,EAAAA,EAAM,CACLC,QAjFgB+H,KACpBC,EACE9N,EAAME,KAAKmF,IAAU,IAAD0I,EAAAC,EAAAC,EAAAC,EAAAC,EFFUC,EEG5B,MAAO,CACL1N,KAAU,OAAJ2E,QAAI,IAAJA,OAAI,EAAJA,EAAM3E,KACZ6E,MAAW,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAME,MACbD,MAAW,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMC,MACbE,IAAS,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMG,IACXC,WAAgB,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMI,WAClBuD,UAAe,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,UACjBH,MFV0BuF,EEUI,OAAJ/I,QAAI,IAAJA,OAAI,EAAJA,EAAMgJ,UFTtB,IAAIC,KAAKF,GAYVG,eAAe,QAVhB,CACdC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,SAAU,iBECJhG,KAAU,OAAJzD,QAAI,IAAJA,GAAY,QAAR0I,EAAJ1I,EAAMF,cAAM,IAAA4I,OAAR,EAAJA,EAAcpH,UACpBvB,MAAO,IAAmC,KAA7BC,EAAKF,OAAO4J,eAAwB1J,EAAKF,OAAO6J,gBAAgBpI,QAAQ,SACrFE,UAAWoF,IACJ,OAAJ7G,QAAI,IAAJA,GAAY,QAAR2I,EAAJ3I,EAAMF,cAAM,IAAA6I,OAAR,EAAJA,EAAclH,WAAY,KAAMF,QAAQ,GACrC,OAAJvB,QAAI,IAAJA,GAAY,QAAR4I,EAAJ5I,EAAMF,cAAM,IAAA8I,OAAR,EAAJA,EAAclH,UAEhBgI,eAAoB,OAAJ1J,QAAI,IAAJA,GAAY,QAAR6I,EAAJ7I,EAAMF,cAAM,IAAA+I,OAAR,EAAJA,EAAca,eAC9BC,eAAoB,OAAJ3J,QAAI,IAAJA,GAAY,QAAR8I,EAAJ9I,EAAMF,cAAM,IAAAgJ,OAAR,EAAJA,EAAca,eAC9BhI,uBAA4B,OAAJ3B,QAAI,IAAJA,OAAI,EAAJA,EAAM2B,uBAC9BC,mBAAwB,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,mBAC1BC,OAAY,OAAJ7B,QAAI,IAAJA,OAAI,EAAJA,EAAM6B,OACdC,YAAiB,OAAJ9B,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,YACnBC,kBAAuB,OAAJ/B,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,kBAC1B,IAGJ,EAuDGjF,QAAQ,YACR8M,WAAW1N,EAAAA,EAAAA,KAAC2N,EAAAA,EAAY,IAAIzN,SAC7B,eAKP,C,cC1FA,MAAM0N,EAAc,CAClBX,KAAM,UACNC,MAAO,OACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,SAAU,eAGNM,EAAmBC,GACJ,IAAIf,KAAKe,GACVC,mBAAmB,QAASH,GAGjC,SAASI,KACtB,MAAQvP,MAAOwP,EAAU,UAAEC,IAAcxC,EAAAA,EAAAA,KAAayC,GAAUA,EAAMrK,QAE/DwF,EAAM8E,IAAW/J,EAAAA,EAAAA,UAAS,IAC1BsF,EAAO0E,IAAYhK,EAAAA,EAAAA,UAAS,QAC5BgD,EAAUiH,IAAejK,EAAAA,EAAAA,UAAS,KAClCuF,EAAS2E,IAAclK,EAAAA,EAAAA,UAAS,KAChCmH,EAAYgD,IAAiBnK,EAAAA,EAAAA,UAAS,KACtCkF,EAAakF,IAAkBpK,EAAAA,EAAAA,UAAS,KAEzCqK,GAAiBC,EAAAA,EAAAA,UAAQ,IACtBjQ,MAAMkQ,QAAQX,GACjBA,EACCtP,KAAKmF,IAAI,IAAA0I,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,MAAM,IACX9I,EACHhF,GAAQ,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAM+K,IACVhL,OACO,OAAJC,QAAI,IAAJA,GAAY,QAAR0I,EAAJ1I,EAAMF,cAAM,IAAA4I,OAAR,EAAJA,EAAcgB,iBAAqB,OAAJ1J,QAAI,IAAJA,GAAY,QAAR2I,EAAJ3I,EAAMF,cAAM,IAAA6I,OAAR,EAAJA,EAAcgB,gBAC9C,IACFlG,KAAU,OAAJzD,QAAI,IAAJA,GAAY,QAAR4I,EAAJ5I,EAAMF,cAAM,IAAA8I,OAAR,EAAJA,EAActH,UACpBkC,KAAMuG,EAAgB/J,EAAgB,WACtCpE,QACM,OAAJoE,QAAI,IAAJA,GAAY,QAAR6I,EAAJ7I,EAAMF,cAAM,IAAA+I,OAAR,EAAJA,EAAca,iBAAqB,OAAJ1J,QAAI,IAAJA,GAAY,QAAR8I,EAAJ9I,EAAMF,cAAM,IAAAgJ,OAAR,EAAJA,EAAca,gBAAiB,GAC1D,SACA,SACP,IACAqB,MAAK,CAACC,EAAGC,KAAO,IAADlP,EAAAmP,EAAAC,EAAAC,EACd,IAAKxF,EAAO,OAAOoF,EAAIC,EACvB,GAAe,QAAXpF,GAAwB,OAADmF,QAAC,IAADA,GAAAA,EAAGjC,WAAgB,OAADkC,QAAC,IAADA,GAAAA,EAAGlC,UAAW,CACzD,GAAa,OAATnD,EACF,OAAO,IAAIoD,KAAKgC,EAAEjC,WAAa,IAAIC,KAAKiC,EAAElC,WAE5C,GAAa,QAATnD,EACF,OAAO,IAAIoD,KAAKiC,EAAElC,WAAa,IAAIC,KAAKgC,EAAEjC,UAE9C,CACA,MAAMsC,EACFL,EAAEnF,IAA2B,QAAnB9J,EAAI,GAAGiP,EAAEnF,YAAU,IAAA9J,GAAfA,EAAiBuP,SAAS,KAC5B,QADgCJ,EAC1CF,EAAEnF,UAAQ,IAAAqF,OAAA,EAAVA,EAAYK,MAAM,GAClBP,EAAEnF,GACF2F,EACFP,EAAEpF,IAA2B,QAAnBsF,EAAI,GAAGF,EAAEpF,YAAU,IAAAsF,GAAfA,EAAiBG,SAAS,KAC5B,QADgCF,EAC1CH,EAAEpF,UAAQ,IAAAuF,OAAA,EAAVA,EAAYG,MAAM,GAClBN,EAAEpF,GAER,MACqB,kBAAXwF,GACW,kBAAXG,GACPtI,OAAOmI,IACPnI,OAAOsI,GAIM,QAAV5F,EACKyF,EAASG,GAAU,EAAI,EAEvBH,EAASG,GAAU,EAAI,EALf,QAAV5F,EAAkByF,EAASG,EAASA,EAASH,CAOtD,IAEF,IACH,CAACnB,EAAYtE,EAAOC,IAEjB4F,GAAaC,EAAAA,EAAAA,cAChB3Q,IACC8L,QAAQC,IAAI,CAAElB,QAAOC,YAEf9K,IACJuP,EAFYzE,IAAY9K,GAAgB,QAAV6K,EAEb,OAAS,OAC1B4E,EAAWzP,GACb,GAEF,CAAC6K,EAAOC,IAGJ8F,GAAuBD,EAAAA,EAAAA,cAC1BvH,IACC,GAAIA,EAAMgE,OAAOyD,QAAjB,CACE,MAAMC,EAAenR,EAAME,KAAKkR,GAAMA,EAAE1Q,OACxCmP,EAAYsB,EAEd,MACAtB,EAAY,GAAG,GAEjB,CAAC7P,IAGG+I,GAAciI,EAAAA,EAAAA,cAClB,CAACvH,EAAO/I,KACN,MAAM2Q,EAAgBzI,EAAS0I,QAAQ5Q,GACvC,IAAI6Q,EAAc,IACK,IAAnBF,EACFE,EAAcA,EAAYC,OAAO5I,EAAUlI,GAChB,IAAlB2Q,EACTE,EAAcA,EAAYC,OAAO5I,EAASiI,MAAM,IACvCQ,IAAkBzI,EAAS6I,OAAS,EAC7CF,EAAcA,EAAYC,OAAO5I,EAASiI,MAAM,GAAI,IAC3CQ,EAAgB,IACzBE,EAAcA,EAAYC,OACxB5I,EAASiI,MAAM,EAAGQ,GAClBzI,EAASiI,MAAMQ,EAAgB,KAGnCxB,EAAY0B,EAAY,GAE1B,CAAC3I,IAGG8I,GAAmBV,EAAAA,EAAAA,cAAY,CAACvH,EAAOkI,KAC3ChC,EAAQgC,EAAQ,GACf,IAEGC,GAA0BZ,EAAAA,EAAAA,cAAavH,IAC3CkG,EAAQ,GACRK,EAAe6B,SAASpI,EAAMgE,OAAOH,MAAO,IAAI,GAC/C,IAEGwE,GAAqBd,EAAAA,EAAAA,cAAa1D,IACtCqC,EAAQ,GACRI,EAAczC,EAAM,GACnB,IAGGyE,EN9HD,SAAoB1Q,GAAyC,IAAxC,UAAE2Q,EAAS,WAAEC,EAAU,WAAElF,GAAY1L,EAC/D,MAAM6Q,EAAiBF,EAAU9R,KAAI,CAACiS,EAAI/R,IAAU,CAAC+R,EAAI/R,KAkBzD,OAVA4R,EAAYE,EAAehS,KAAKiS,GAAOA,EAAG,KAEtCpF,IACFiF,EAAYA,EAAUI,QAAQ/M,GAC5BgN,OAAOC,KAAKjN,GAAMkN,MAAMC,GACtBC,OAAOpN,EAAKmN,IAAME,cAAc9B,SAAS7D,EAAW2F,oBAKnDV,CACT,CM2GWW,CAAY,CACjBX,UAAW/B,EACXgC,WAAY,GAEZlF,eAKE6F,GAAYb,EAAaN,UAAY1E,EAE3C,OAAO0C,GACLlO,EAAAA,EAAAA,KAACsR,EAAAA,EAAO,CAACxL,UAAU,YAEnB9F,EAAAA,EAAAA,KAACuR,EAAAA,EAAS,CAAArR,UACRM,EAAAA,EAAAA,MAACgR,EAAAA,EAAI,CAAAtR,SAAA,EACHF,EAAAA,EAAAA,KAACuL,EAAgB,CACfxB,YAAa1C,EAAS6I,OACtB1E,WAAYA,EACZC,aAAc8E,KAGhBvQ,EAAAA,EAAAA,KAACyR,EAAAA,EAAS,CAAAvR,UACRF,EAAAA,EAAAA,KAAC0R,EAAAA,EAAc,CAACpR,GAAI,CAAE6I,SAAU,SAAUjJ,UACxCM,EAAAA,EAAAA,MAACmR,EAAAA,EAAK,CAACrR,GAAI,CAAEiC,SAAU,KAAMrC,SAAA,EAC3BF,EAAAA,EAAAA,KAAC0J,EAAa,CACZC,MAAOA,EACPC,QAASA,EACTC,SAAUpL,EAAMyR,OAChBnG,YAAa1C,EAAS6I,OACtBlG,cAAewF,EACfvF,iBAAkByF,EAClB5F,UAAW,CACT,CAAEhL,GAAI,OAAQ2L,MAAO,QACrB,CAAE3L,GAAI,OAAQ2L,MAAO,QACrB,CAAE3L,GAAI,QAAS2L,MAAO,SACtB,CAAE3L,GAAI,OAAQ2L,MAAO,QACrB,CAAE3L,GAAI,YAAa2L,MAAO,aAE1B,CAAE3L,GAAI,SAAU2L,MAAO,UACvB,CAAE3L,GAAI,QAGV0B,EAAAA,EAAAA,MAACoR,EAAAA,EAAS,CAAA1R,SAAA,CACPsQ,EACElB,MAAMhG,EAAOC,EAAaD,EAAOC,EAAcA,GAC/C5K,KAAKkT,IAEF7R,EAAAA,EAAAA,KAACoH,EAAY,CACXtD,KAAM+N,EAEN/S,GAAO,OAAH+S,QAAG,IAAHA,OAAG,EAAHA,EAAK/S,GACTK,KAAM0S,EAAI1S,KACV6E,MAAO6N,EAAI7N,MACXD,MAAO8N,EAAI9N,MACXF,MAAOgO,EAAIhO,MACX0D,KAAMsK,EAAItK,KACVtD,IAAK4N,EAAI5N,IACTwD,UAAWoK,EAAIpK,UACfvD,WAAY2N,EAAI3N,WAChBoD,KAAMuK,EAAIvK,KACV1D,OAAQiO,EAAIjO,OACZlE,OAAQmS,EAAInS,OACZ2H,UAA0C,IAAhCA,EAAS0I,QAAQ8B,EAAI1S,MAC/BqI,YAAcU,GAAUV,EAAYU,EAAO2J,EAAI1S,OAd1C0S,EAAI/S,OAmBjBkB,EAAAA,EAAAA,KAAC0K,EAAc,CACbpI,OAAQ,GACR+G,UAAWA,EAAUC,EAAMC,EAAa9K,EAAMyR,UAG/CmB,IAAYrR,EAAAA,EAAAA,KAACH,EAAW,CAACE,MAAOyL,eAMzCxL,EAAAA,EAAAA,KAAC8R,EAAAA,EAAe,CACdxI,KAAMA,EACNzE,UAAU,MACVkN,MAAOvB,EAAaN,OACpB3G,YAAaA,EACbyI,aAAc7B,EACd8B,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MAC9DC,oBAAqB7B,QAK/B,CC5Pe,SAASrC,KACtB,OACExN,EAAAA,EAAAA,MAAAqH,EAAAA,SAAA,CAAA3H,SAAA,EACEF,EAAAA,EAAAA,KAACmS,EAAAA,GAAM,CAAAjS,UACLF,EAAAA,EAAAA,KAAA,SAAAE,SAAO,eAGTF,EAAAA,EAAAA,KAACoS,GAAQ,MAGf,C","sources":["_mock/user.js","sections/user/table-no-data.jsx","components/label/styles.js","sections/user/BasicModal.jsx","sections/user/user-table-row.jsx","sections/user/utils.js","sections/user/user-table-head.jsx","sections/user/table-empty-rows.jsx","utils/format-time.js","utils/exportExcel.js","sections/user/user-table-toolbar.jsx","sections/user/view/user-view.jsx","pages/user.jsx"],"sourcesContent":["import { sample } from 'lodash';\r\nimport { faker } from '@faker-js/faker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const users = [...Array(24)].map((_, index) => ({\r\n  id: faker.string.uuid(),\r\n  avatarUrl: `/assets/images/avatars/avatar_${index + 1}.jpg`,\r\n  name: faker.person.fullName(),\r\n  company: faker.company.name(),\r\n  isVerified: faker.datatype.boolean(),\r\n  status: sample(['active', 'banned']),\r\n  role: sample([\r\n    'Leader',\r\n    'Hr Manager',\r\n    'UI Designer',\r\n    'UX Designer',\r\n    'UI/UX Designer',\r\n    'Project Manager',\r\n    'Backend Developer',\r\n    'Full Stack Designer',\r\n    'Front End Developer',\r\n    'Full Stack Developer',\r\n  ]),\r\n}));\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Paper from '@mui/material/Paper';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableNoData({ query }) {\r\n  return (\r\n    <TableRow>\r\n      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n        <Paper\r\n          sx={{\r\n            textAlign: 'center',\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" paragraph>\r\n            Not found\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\">\r\n            No results found for &nbsp;\r\n            <strong>&quot;{query}&quot;</strong>.\r\n            <br /> Try checking for typos or using complete words.\r\n          </Typography>\r\n        </Paper>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableNoData.propTypes = {\r\n  query: PropTypes.string,\r\n};\r\n","import Box from '@mui/material/Box';\r\nimport { alpha, styled } from '@mui/material/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const StyledLabel = styled(Box)(({ theme, ownerState }) => {\r\n  const lightMode = theme.palette.mode === 'light';\r\n\r\n  const filledVariant = ownerState.variant === 'filled';\r\n\r\n  const outlinedVariant = ownerState.variant === 'outlined';\r\n\r\n  const softVariant = ownerState.variant === 'soft';\r\n\r\n  const defaultStyle = {\r\n    ...(ownerState.color === 'default' && {\r\n      // FILLED\r\n      ...(filledVariant && {\r\n        color: lightMode ? theme.palette.common.white : theme.palette.grey[800],\r\n        backgroundColor: theme.palette.text.primary,\r\n      }),\r\n      // OUTLINED\r\n      ...(outlinedVariant && {\r\n        backgroundColor: 'transparent',\r\n        color: theme.palette.text.primary,\r\n        border: `2px solid ${theme.palette.text.primary}`,\r\n      }),\r\n      // SOFT\r\n      ...(softVariant && {\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: alpha(theme.palette.grey[500], 0.16),\r\n      }),\r\n    }),\r\n  };\r\n\r\n  const colorStyle = {\r\n    ...(ownerState.color !== 'default' && {\r\n      // FILLED\r\n      ...(filledVariant && {\r\n        color: theme.palette[ownerState.color].contrastText,\r\n        backgroundColor: theme.palette[ownerState.color].main,\r\n      }),\r\n      // OUTLINED\r\n      ...(outlinedVariant && {\r\n        backgroundColor: 'transparent',\r\n        color: theme.palette[ownerState.color].main,\r\n        border: `2px solid ${theme.palette[ownerState.color].main}`,\r\n      }),\r\n      // SOFT\r\n      ...(softVariant && {\r\n        color: theme.palette[ownerState.color][lightMode ? 'dark' : 'light'],\r\n        backgroundColor: alpha(theme.palette[ownerState.color].main, 0.16),\r\n      }),\r\n    }),\r\n  };\r\n\r\n  return {\r\n    height: 24,\r\n    minWidth: 24,\r\n    lineHeight: 0,\r\n    borderRadius: 6,\r\n    cursor: 'default',\r\n    alignItems: 'center',\r\n    whiteSpace: 'nowrap',\r\n    display: 'inline-flex',\r\n    justifyContent: 'center',\r\n    textTransform: 'capitalize',\r\n    padding: theme.spacing(0, 0.75),\r\n    fontSize: theme.typography.pxToRem(12),\r\n    fontWeight: theme.typography.fontWeightBold,\r\n    transition: theme.transitions.create('all', {\r\n      duration: theme.transitions.duration.shorter,\r\n    }),\r\n    ...defaultStyle,\r\n    ...colorStyle,\r\n  };\r\n});\r\n","import { useState } from 'react';\r\n\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\nimport Divider from '@mui/material/Divider';\r\n\r\nexport default ({\r\n  result,\r\n  grade,\r\n  user,\r\n  name,\r\n  phone,\r\n  email,\r\n  age,\r\n  experience,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" onClick={handleOpen}>\r\n        Details\r\n      </Button>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n       \r\n      >\r\n        <Box sx={style}>\r\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h1\">\r\n            {name}\r\n          </Typography>\r\n\r\n          <Divider\r\n            sx={{\r\n              borderColor: `unset`,\r\n              borderWidth: `opx`,\r\n              padding: `1px`,\r\n              backgroundColor: `#686D76`,\r\n              marginBottom: `10px`,\r\n            }}\r\n            orientation=\"vertical\"\r\n            flexItem\r\n          />\r\n\r\n          <Typography component=\"h4\">\r\n            <strong>email</strong> : {email}\r\n          </Typography>\r\n          <Typography component=\"h4\">\r\n            <strong>phone</strong> : {phone}\r\n          </Typography>\r\n          <Typography component=\"h4\">\r\n            <strong>age</strong> : {age}\r\n          </Typography>\r\n          <Typography component=\"h4\">\r\n            <strong>Exam</strong> :{result?.levelName}\r\n          </Typography>\r\n          <Typography component=\"h4\">\r\n            <strong>Grade</strong> : {(+grade).toFixed(2)} / 100\r\n          </Typography>\r\n          <Typography component=\"h4\">\r\n            <strong>Time taken</strong> :{' '}\r\n            {timeFormat(\r\n              (result?.timeTaken / 1000).toFixed(0),\r\n              result?.fullTime\r\n            )}\r\n          </Typography>\r\n          {user?.academicSpecialization && (\r\n            <Typography component=\"h4\">\r\n              <strong>Academic Specialization</strong> :{' '}\r\n              {user?.academicSpecialization}\r\n            </Typography>\r\n          )}\r\n\r\n          {user?.countryOfResidence && (\r\n            <Typography component=\"h4\">\r\n              <strong>Country Of Residence</strong> : {user?.countryOfResidence}\r\n            </Typography>\r\n          )}\r\n          {user?.gender && (\r\n            <Typography component=\"h4\">\r\n              <strong>gender</strong> : {user?.gender}\r\n            </Typography>\r\n          )}\r\n          {user?.nationality && (\r\n            <Typography component=\"h4\">\r\n              <strong>nationality</strong> : {user?.nationality}\r\n            </Typography>\r\n          )}\r\n\r\n         {!!experience && <Typography component=\"h4\">\r\n            <strong>experience</strong> : {experience}\r\n          </Typography>}\r\n\r\n          {(user?.relatedExperience || user?.relatedExperience == 0) && (\r\n            <Typography component=\"h4\">\r\n              <strong>Related Experience</strong> : {user?.relatedExperience}\r\n            </Typography>\r\n          )}\r\n\r\n          <Typography\r\n            id=\"modal-modal-description\"\r\n            className=\"     text-sm   \"\r\n            sx={{ mt: 2 }}\r\n          ></Typography>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: 'flex',\r\n  gap: 2,\r\n  flexDirection: `column`,\r\n  borderRadius: 2,\r\n  maxHeight: `90vh`,\r\n  overflowY: 'scroll', \r\n  overflowX: 'hidden', \r\n  msOverflowStyle: 'none', \r\n  scrollbarWidth: 'none', \r\n  '::-webkit-scrollbar': {\r\n    display: 'none', \r\n  },\r\n};\r\n\r\nfunction timeFormat(s, full) {\r\n  var seconds = +s;\r\n  let fullTime = +full;\r\n\r\n  if (\r\n    (typeof seconds !== 'number' || seconds < 0) &&\r\n    typeof fullTime !== 'number'\r\n  ) {\r\n    return 'Invalid input';\r\n  }\r\n  if (\r\n    (typeof seconds !== 'number' || seconds < 0 || isNaN(seconds)) &&\r\n    typeof fullTime == 'number'\r\n  ) {\r\n    seconds = fullTime;\r\n    // console.log(seconds, fullTime);\r\n  }\r\n\r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  const formattedTime = `${hours}h ${minutes}m ${remainingSeconds}s`;\r\n  return formattedTime;\r\n}\r\n","import { useState } from 'react';\r\n\r\nimport Stack from '@mui/material/Stack';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Popover from '@mui/material/Popover';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\nimport Label from './../../components/label';\r\nimport Iconify from './../../components/iconify';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteUser } from './../../store/user/userSlice';\r\nimport BasicModal from './BasicModal';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableRow({\r\n  selected,\r\n  name,\r\n  email,\r\n  phone,\r\n  date,\r\n  result,\r\n  grade,\r\n  exam,\r\n  id,\r\n  handleClick,\r\n  age,\r\n  experience,\r\n  education,\r\n  user,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [open, setOpen] = useState(null);\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setOpen(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow hover tabIndex={-1} role=\"checkbox\" selected={selected}>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox disableRipple checked={selected} onChange={handleClick} />\r\n        </TableCell> */}\r\n        {/* \r\n        <TableCell className=\"  pl-5\" component=\"th\" scope=\"row\" padding=\"none\" align=\"center\">\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n            <Typography variant=\"subtitle2\" noWrap sx={{ textAlign: `center`, margin: `auto` }}>\r\n              {name}\r\n            </Typography>\r\n          </Stack>\r\n        </TableCell> */}\r\n        <TableCell align=\"center\">{name}</TableCell>\r\n\r\n        <TableCell align=\"center\">{result?.levelName}</TableCell>\r\n\r\n        <TableCell align=\"center\">{(+grade).toFixed(2)}</TableCell>\r\n\r\n        <TableCell align=\"center\">{date}</TableCell>\r\n        <TableCell align=\"center\">{education}</TableCell>\r\n        {/* <TableCell align=\"center\">{experience}</TableCell> */}\r\n        {/* <TableCell align=\"center\" className=\"text-center m-auto\"> */}\r\n        {/* {exam} */}\r\n        {/* </TableCell> */}\r\n        {/* <TableCell align=\"center\">{date}</TableCell> */}\r\n        <TableCell align=\"center\">\r\n          <BasicModal\r\n            id={id}\r\n            phone={phone}\r\n            user={user}\r\n            result={result}\r\n            grade={grade}\r\n            // date={date}\r\n            email={email}\r\n            age={age}\r\n            experience={experience}\r\n            name={name}\r\n          />\r\n        </TableCell>\r\n\r\n        <TableCell align=\"right\">\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <Iconify icon=\"eva:more-vertical-fill\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n\r\n      <Popover\r\n        open={!!open}\r\n        anchorEl={open}\r\n        onClose={handleCloseMenu}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        PaperProps={{\r\n          sx: { width: 140 },\r\n        }}\r\n      >\r\n        <MenuItem onClick={handleCloseMenu} sx={{ color: 'error.main' }}>\r\n          <button\r\n            className=\"w-full flex items-center   leading-7\"\r\n            onClick={() => {\r\n              // console.log(`delete clicked`, id);\r\n              dispatch(deleteUser(id));\r\n            }}\r\n          >\r\n            <>\r\n              <Iconify icon=\"eva:trash-2-outline\" sx={{ mr: 2 }} />\r\n              Delete\r\n            </>\r\n          </button>\r\n        </MenuItem>\r\n      </Popover>\r\n    </>\r\n  );\r\n}\r\n","export const visuallyHidden = {\r\n  border: 0,\r\n  margin: -1,\r\n  padding: 0,\r\n  width: '1px',\r\n  height: '1px',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  whiteSpace: 'nowrap',\r\n  clip: 'rect(0 0 0 0)',\r\n};\r\n\r\nexport function emptyRows(page, rowsPerPage, arrayLength) {\r\n  return page ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (a[orderBy] === null) {\r\n    return 1;\r\n  }\r\n  if (b[orderBy] === null) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\nexport function getComparator(order, orderBy) {\r\n  const output =\r\n    order === 'asc'\r\n      ? (a, b) => descendingComparator(a, b, orderBy)\r\n      : (a, b) => -descendingComparator(a, b, orderBy);\r\n\r\n  return output;\r\n}\r\nexport function applyFilter({ inputData, comparator, filterName }) {\r\n  const stabilizedThis = inputData.map((el, index) => [el, index]);\r\n\r\n  // stabilizedThis.sort((a, b) => {\r\n  //   const order = comparator(a[0], b[0]);\r\n  //   if (order !== 0) return order;\r\n  //   return a[1] - b[1];\r\n  // });\r\n\r\n  inputData = stabilizedThis.map((el) => el[0]);\r\n\r\n  if (filterName) {\r\n    inputData = inputData.filter((user) =>\r\n      Object.keys(user).some((key) =>\r\n        String(user[key]).toLowerCase().includes(filterName.toLowerCase())\r\n      )\r\n    );\r\n  }\r\n\r\n  return inputData;\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableSortLabel from '@mui/material/TableSortLabel';\r\n\r\nimport { visuallyHidden } from './utils';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableHead({\r\n  order,\r\n  orderBy,\r\n  rowCount,\r\n  headLabel,\r\n  numSelected,\r\n  onRequestSort,\r\n  onSelectAllClick,\r\n}) {\r\n  // const onSort = (property) => (event) => {\r\n  //   onRequestSort(event, property);\r\n  // };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align || 'center'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={() => {\r\n                onRequestSort(headCell.id);\r\n              }}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{ ...visuallyHidden }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nUserTableHead.propTypes = {\r\n  order: PropTypes.oneOf(['asc', 'desc']),\r\n  orderBy: PropTypes.string,\r\n  rowCount: PropTypes.number,\r\n  headLabel: PropTypes.array,\r\n  numSelected: PropTypes.number,\r\n  onRequestSort: PropTypes.func,\r\n  onSelectAllClick: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TableCell from '@mui/material/TableCell';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function TableEmptyRows({ emptyRows, height }) {\r\n  if (!emptyRows) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <TableRow\r\n      sx={{\r\n        ...(height && {\r\n          height: height * emptyRows,\r\n        }),\r\n      }}\r\n    >\r\n      <TableCell colSpan={9} />\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nTableEmptyRows.propTypes = {\r\n  emptyRows: PropTypes.number,\r\n  height: PropTypes.number,\r\n};\r\n","import { format, getTime, formatDistanceToNow } from 'date-fns';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fDate(date, newFormat) {\r\n  const fm = newFormat || 'dd MMM yyyy';\r\n\r\n  return date ? format(new Date(date), fm) : '';\r\n}\r\n\r\nexport function fDateTime(date, newFormat) {\r\n  const fm = newFormat || 'dd MMM yyyy p';\r\n\r\n  return date ? format(new Date(date), fm) : '';\r\n}\r\n\r\nexport function fTimestamp(date) {\r\n  return date ? getTime(new Date(date)) : '';\r\n}\r\n\r\nexport function fToNow(date) {\r\n  return date\r\n    ? formatDistanceToNow(new Date(date), {\r\n        addSuffix: true,\r\n      })\r\n    : '';\r\n}\r\n\r\nexport function formatTimeCreatedAt(timestampString) {\r\n  const timestamp = new Date(timestampString);\r\n\r\n  const options = {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit',\r\n    timeZone: 'Asia/Riyadh', // Time zone for Saudi Arabia\r\n  };\r\n\r\n  return timestamp.toLocaleString('en-US', options);\r\n}\r\n\r\n// export function timeTakenFormat(s) {\r\n//   let seconds = +s/1000;\r\n//   if (typeof seconds !== \"number\" || seconds < 0) {\r\n//     return \"Invalid input\";\r\n//   }\r\n\r\n//   const hours = Math.floor(seconds / 3600);\r\n//   const minutes = Math.floor((seconds % 3600) / 60);\r\n//   const remainingSeconds = seconds % 60;\r\n\r\n//   const formattedTime = `${hours}h ${minutes}m ${remainingSeconds}s`;\r\n//   return formattedTime;\r\n// }\r\n\r\nexport function timeTakenFormat(s, full) {\r\n  var seconds = +s;\r\n  let fullTime = +full;\r\n\r\n  if (\r\n    (typeof seconds !== 'number' || seconds < 0) &&\r\n    typeof fullTime !== 'number'\r\n  ) {\r\n    return 'Invalid input';\r\n  }\r\n  if (\r\n    (typeof seconds !== 'number' || seconds < 0 || isNaN(seconds)) &&\r\n    typeof fullTime == 'number'\r\n  ) {\r\n    seconds = fullTime;\r\n    console.log(seconds, fullTime);\r\n  }\r\n\r\n  const hours = Math.floor(seconds / 3600);\r\n  const minutes = Math.floor((seconds % 3600) / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  const formattedTime = `${hours}h ${minutes}m ${remainingSeconds}s`;\r\n  return formattedTime;\r\n}\r\n","import * as XLSX from 'xlsx';\r\n\r\nconst exportExcel = (data) => {\r\n  const workSheet = XLSX.utils.json_to_sheet(data);\r\n  const workBook = XLSX.utils.book_new(data);\r\n  XLSX.utils.book_append_sheet(workBook, workSheet, `test`);\r\n  //Buffer\r\n  XLSX.write(workBook, { bookType: 'xlsx', type: 'buffer' });\r\n  //Binary string\r\n  XLSX.write(workBook, { bookType: 'xlsx', type: 'binary' });\r\n  //Download\r\n  XLSX.writeFile(workBook, 'report.xlsx');\r\n};\r\n\r\nexport default exportExcel;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Button from '@mui/material/Button';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport { useSelector } from 'react-redux';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nimport { formatTimeCreatedAt, timeTakenFormat } from '../../utils/format-time';\r\nimport exportExcel from '../../utils/exportExcel';\r\nimport { useState } from 'react';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserTableToolbar({\r\n  numSelected,\r\n  filterName,\r\n  onFilterName,\r\n}) {\r\n  const { users } = useSelector((s) => s.user);\r\n\r\n  const [searchVal, setSearchVal] = useState();\r\n\r\n  const downLoadUsers = () => {\r\n    exportExcel(\r\n      users.map((user) => {\r\n        return {\r\n          name: user?.name,\r\n          email: user?.email,\r\n          phone: user?.phone,\r\n          age: user?.age,\r\n          experience: user?.experience,\r\n          education: user?.education,\r\n          date: formatTimeCreatedAt(user?.createdAt),\r\n          exam: user?.result?.levelName,\r\n          grade: `${((+user.result.correctAnswers * 100) / user.result.totalQuestions).toFixed(2)}/100`,\r\n          timeTaken: timeTakenFormat(\r\n            (user?.result?.timeTaken / 1000).toFixed(0),\r\n            user?.result?.fullTime\r\n          ),\r\n          correctAnswers: user?.result?.correctAnswers,\r\n          totalQuestions: user?.result?.totalQuestions,\r\n          academicSpecialization: user?.academicSpecialization,\r\n          countryOfResidence: user?.countryOfResidence,\r\n          gender: user?.gender,\r\n          nationality: user?.nationality,\r\n          relatedExperience: user?.relatedExperience,\r\n        };\r\n        // grade:\r\n      })\r\n    );\r\n    // console.log(\r\n\r\n    // );\r\n  };\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        height: 96,\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        p: (theme) => theme.spacing(0, 1, 0, 3),\r\n        ...(numSelected > 0 && {\r\n          color: 'primary.main',\r\n          bgcolor: 'primary.lighter',\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography component=\"div\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n          <TextField\r\n            value={searchVal}\r\n            onChange={(e) => {\r\n              setSearchVal(e.target.value);\r\n            }}\r\n            placeholder=\"Search user...\"\r\n          />\r\n          <Button\r\n            onClick={() => {\r\n              onFilterName(searchVal);\r\n            }}\r\n            variant=\"outlined\"\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>{/* <Iconify icon=\"eva:trash-2-fill\" /> */}</IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            {/* <Iconify icon=\"ic:round-filter-list\" /> */}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n      <Button\r\n        onClick={downLoadUsers}\r\n        variant=\"contained\"\r\n        startIcon={<DownloadIcon />}\r\n      >\r\n        Download\r\n      </Button>\r\n    </Toolbar>\r\n  );\r\n}\r\n\r\nUserTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number,\r\n  filterName: PropTypes.string,\r\n  onFilterName: PropTypes.func,\r\n};\r\n","import { useCallback, useState, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Card from '@mui/material/Card';\r\nimport Stack from '@mui/material/Stack';\r\nimport Table from '@mui/material/Table';\r\nimport Button from '@mui/material/Button';\r\nimport Container from '@mui/material/Container';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport Typography from '@mui/material/Typography';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport { debounce } from 'lodash';\r\n\r\nimport { users } from './../../../_mock/user';\r\nimport Scrollbar from './../../../components/scrollbar';\r\n\r\nimport TableNoData from './../table-no-data';\r\nimport UserTableRow from './../user-table-row';\r\nimport UserTableHead from './../user-table-head';\r\nimport TableEmptyRows from './../table-empty-rows';\r\nimport UserTableToolbar from './../user-table-toolbar';\r\nimport { emptyRows, applyFilter } from './../utils';\r\nimport Spinner from '../../../components/Spinner';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst timeOptions = {\r\n  year: 'numeric',\r\n  month: 'long',\r\n  day: 'numeric',\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric',\r\n  timeZone: 'Asia/Riyadh',\r\n};\r\n\r\nconst convertIntoDate = (dateString) => {\r\n  const dateObject = new Date(dateString);\r\n  return dateObject.toLocaleDateString('en-US', timeOptions);\r\n};\r\n\r\nexport default function UserPage() {\r\n  const { users: usersRedux, isLoading } = useSelector((state) => state.user);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState('asc');\r\n  const [selected, setSelected] = useState([]);\r\n  const [orderBy, setOrderBy] = useState('');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(100);\r\n\r\n  const formattedUsers = useMemo(() => {\r\n    return Array.isArray(usersRedux)\r\n      ? usersRedux\r\n        .map((user) => ({\r\n          ...user,\r\n          id: user?._id,\r\n          grade:\r\n            (user?.result?.correctAnswers / user?.result?.totalQuestions) *\r\n            100,\r\n          exam: user?.result?.levelName,\r\n          date: convertIntoDate(user[`createdAt`]),\r\n          status:\r\n            user?.result?.correctAnswers / user?.result?.totalQuestions > 0.5\r\n              ? `Passed`\r\n              : `Failed`,\r\n        }))\r\n        .sort((a, b) => {\r\n          if (!order) return a + b;\r\n          if (orderBy == `date` && !!a?.createdAt && !!b?.createdAt) {          \r\n            if (order == `asc`) {\r\n              return new Date(a.createdAt) - new Date(b.createdAt);\r\n            }\r\n            if (order == `desc`) {\r\n              return new Date(b.createdAt) - new Date(a.createdAt);\r\n            }\r\n          }\r\n          const valueA =\r\n            !!a[orderBy] && `${a[orderBy]}`?.includes(`+`)\r\n              ? a[orderBy]?.slice(1)\r\n              : a[orderBy];\r\n          const valueB =\r\n            !!b[orderBy] && `${b[orderBy]}`?.includes(`+`)\r\n              ? b[orderBy]?.slice(1)\r\n              : b[orderBy];\r\n\r\n          if (\r\n            typeof +valueA === 'number' &&\r\n            typeof +valueB === 'number' &&\r\n            !isNaN(+valueA) &&\r\n            !isNaN(+valueB)\r\n          ) {\r\n            return order === 'asc' ? valueA - valueB : valueB - valueA;\r\n          } else {\r\n            if (order === 'asc') {\r\n              return valueA < valueB ? -1 : 1;\r\n            } else {\r\n              return valueA > valueB ? -1 : 1;\r\n            }\r\n          }\r\n        })\r\n      : [];\r\n  }, [usersRedux, order, orderBy]);\r\n\r\n  const handleSort = useCallback(\r\n    (id) => {\r\n      console.log({ order, orderBy })\r\n      const isAsc = orderBy === id && order === 'asc';\r\n      if (!!id) {\r\n        setOrder(isAsc ? 'desc' : 'asc');\r\n        setOrderBy(id);\r\n      }\r\n    },\r\n    [order, orderBy]\r\n  );\r\n\r\n  const handleSelectAllClick = useCallback(\r\n    (event) => {\r\n      if (event.target.checked) {\r\n        const newSelecteds = users.map((n) => n.name);\r\n        setSelected(newSelecteds);\r\n        return;\r\n      }\r\n      setSelected([]);\r\n    },\r\n    [users]\r\n  );\r\n\r\n  const handleClick = useCallback(\r\n    (event, name) => {\r\n      const selectedIndex = selected.indexOf(name);\r\n      let newSelected = [];\r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(selected, name);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(selected.slice(1));\r\n      } else if (selectedIndex === selected.length - 1) {\r\n        newSelected = newSelected.concat(selected.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          selected.slice(0, selectedIndex),\r\n          selected.slice(selectedIndex + 1)\r\n        );\r\n      }\r\n      setSelected(newSelected);\r\n    },\r\n    [selected]\r\n  );\r\n\r\n  const handleChangePage = useCallback((event, newPage) => {\r\n    setPage(newPage);\r\n  }, []);\r\n\r\n  const handleChangeRowsPerPage = useCallback((event) => {\r\n    setPage(0);\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n  }, []);\r\n\r\n  const handleFilterByName = useCallback((value) => {\r\n    setPage(0);\r\n    setFilterName(value);\r\n  }, []);\r\n\r\n  // useMemo(\r\n  const dataFiltered = (() => {\r\n    return applyFilter({\r\n      inputData: formattedUsers,\r\n      comparator: [],\r\n      //  getComparator(order, orderBy),\r\n      filterName,\r\n    });\r\n  })();\r\n  // , [formattedUsers, order, orderBy, filterName]);\r\n\r\n  const notFound = !dataFiltered.length && !!filterName;\r\n\r\n  return isLoading ? (\r\n    <Spinner className=\"h-full\" />\r\n  ) : (\r\n    <Container>\r\n      <Card>\r\n        <UserTableToolbar\r\n          numSelected={selected.length}\r\n          filterName={filterName}\r\n          onFilterName={handleFilterByName}\r\n        />\r\n\r\n        <Scrollbar>\r\n          <TableContainer sx={{ overflow: 'unset' }}>\r\n            <Table sx={{ minWidth: 800 }}>\r\n              <UserTableHead\r\n                order={order}\r\n                orderBy={orderBy}\r\n                rowCount={users.length}\r\n                numSelected={selected.length}\r\n                onRequestSort={handleSort}\r\n                onSelectAllClick={handleSelectAllClick}\r\n                headLabel={[\r\n                  { id: 'name', label: 'Name' },\r\n                  { id: 'exam', label: 'Exam' },\r\n                  { id: 'grade', label: 'Grade' },\r\n                  { id: 'date', label: 'Date' },\r\n                  { id: 'education', label: 'Education' },\r\n                  // { id: \"experience\", label: \"Experience\" },\r\n                  { id: 'result', label: 'Result' },\r\n                  { id: '' },\r\n                ]}\r\n              />\r\n              <TableBody>\r\n                {dataFiltered\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((row) => {\r\n                    return (\r\n                      <UserTableRow\r\n                        user={row}\r\n                        key={row.id}\r\n                        id={row?.id}\r\n                        name={row.name}\r\n                        email={row.email}\r\n                        phone={row.phone}\r\n                        grade={row.grade}\r\n                        exam={row.exam}\r\n                        age={row.age}\r\n                        education={row.education}\r\n                        experience={row.experience}\r\n                        date={row.date}\r\n                        result={row.result}\r\n                        status={row.status}\r\n                        selected={selected.indexOf(row.name) !== -1}\r\n                        handleClick={(event) => handleClick(event, row.name)}\r\n                      />\r\n                    );\r\n                  })}\r\n\r\n                <TableEmptyRows\r\n                  height={77}\r\n                  emptyRows={emptyRows(page, rowsPerPage, users.length)}\r\n                />\r\n\r\n                {notFound && <TableNoData query={filterName} />}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Scrollbar>\r\n\r\n        <TablePagination\r\n          page={page}\r\n          component=\"div\"\r\n          count={dataFiltered.length}\r\n          rowsPerPage={rowsPerPage}\r\n          onPageChange={handleChangePage}\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100, 200, 400, 800, 1600, 3200]}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n","import { Helmet } from 'react-helmet-async';\r\n\r\nimport { UserView } from './../sections/user/view';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserPage() {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title> Users </title>\r\n      </Helmet>\r\n\r\n      <UserView />\r\n    </>\r\n  );\r\n}\r\n"],"names":["users","Array","map","_","index","id","faker","string","uuid","avatarUrl","name","person","fullName","company","isVerified","datatype","boolean","status","sample","role","TableNoData","_ref","query","_jsx","TableRow","children","TableCell","align","colSpan","sx","py","_jsxs","Paper","textAlign","Typography","variant","paragraph","styled","Box","theme","ownerState","lightMode","palette","mode","filledVariant","outlinedVariant","softVariant","defaultStyle","color","common","white","grey","backgroundColor","text","primary","border","secondary","alpha","colorStyle","contrastText","main","height","minWidth","lineHeight","borderRadius","cursor","alignItems","whiteSpace","display","justifyContent","textTransform","padding","spacing","fontSize","typography","pxToRem","fontWeight","fontWeightBold","transition","transitions","create","duration","shorter","result","grade","user","phone","email","age","experience","open","setOpen","useState","Button","onClick","handleOpen","Modal","onClose","handleClose","style","component","Divider","borderColor","borderWidth","marginBottom","orientation","flexItem","levelName","toFixed","timeFormat","timeTaken","fullTime","academicSpecialization","countryOfResidence","gender","nationality","relatedExperience","className","mt","position","top","left","transform","bgcolor","boxShadow","p","gap","flexDirection","maxHeight","overflowY","overflowX","msOverflowStyle","scrollbarWidth","s","full","seconds","isNaN","Math","floor","UserTableRow","selected","date","exam","handleClick","education","dispatch","useDispatch","handleCloseMenu","_Fragment","hover","tabIndex","BasicModal","IconButton","event","currentTarget","Iconify","icon","Popover","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","width","MenuItem","deleteUser","mr","visuallyHidden","margin","overflow","clip","emptyRows","page","rowsPerPage","arrayLength","max","UserTableHead","order","orderBy","rowCount","headLabel","numSelected","onRequestSort","onSelectAllClick","TableHead","headCell","sortDirection","TableSortLabel","hideSortIcon","active","direction","label","TableEmptyRows","timeTakenFormat","console","log","data","workSheet","XLSX","json_to_sheet","workBook","book_new","book_append_sheet","bookType","type","UserTableToolbar","filterName","onFilterName","useSelector","searchVal","setSearchVal","Toolbar","TextField","value","onChange","e","target","placeholder","Tooltip","title","downLoadUsers","exportExcel","_user$result","_user$result2","_user$result3","_user$result4","_user$result5","timestampString","createdAt","Date","toLocaleString","year","month","day","hour","minute","second","timeZone","correctAnswers","totalQuestions","startIcon","DownloadIcon","timeOptions","convertIntoDate","dateString","toLocaleDateString","UserPage","usersRedux","isLoading","state","setPage","setOrder","setSelected","setOrderBy","setFilterName","setRowsPerPage","formattedUsers","useMemo","isArray","_id","sort","a","b","_a$orderBy","_ref2","_b$orderBy","valueA","includes","slice","valueB","handleSort","useCallback","handleSelectAllClick","checked","newSelecteds","n","selectedIndex","indexOf","newSelected","concat","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","handleFilterByName","dataFiltered","inputData","comparator","stabilizedThis","el","filter","Object","keys","some","key","String","toLowerCase","applyFilter","notFound","Spinner","Container","Card","Scrollbar","TableContainer","Table","TableBody","row","TablePagination","count","onPageChange","rowsPerPageOptions","onRowsPerPageChange","Helmet","UserView"],"sourceRoot":""}