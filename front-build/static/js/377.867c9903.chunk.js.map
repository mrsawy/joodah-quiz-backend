{"version":3,"file":"static/js/377.867c9903.chunk.js","mappings":"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","sources":["sections/questions/LevelCard.jsx","sections/questions/InputField.jsx","sections/questions/AddEditQuestion.jsx","sections/questions/QuestionElement.jsx","sections/questions/QuestionsGroup.jsx","sections/questions/view/questions-view.jsx","pages/questions.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport {\n  getQuestions,\n  setCurrentLevel,\n  setCurrentQuestions,\n} from '../../store/question/questionSlice';\n\nexport default function LevelCard({\n  level_en,\n  level_ar,\n  level,\n  _id,\n  name_en,\n  name_ar,\n  numberOfMinutes,\n  questions,\n}) {\n  const { questionsIsSet } = useSelector((s) => s.questions);\n  const dispatch = useDispatch();\n  const handleDisplayQuestions = () => {\n    document.querySelectorAll(`.question-body`).forEach((ele) => {\n      ele.style.display = `none`;\n      ele.classList.add(`hidden`);\n    });\n    dispatch(setCurrentLevel(level));\n    if (questions && !questionsIsSet) {\n      dispatch(setCurrentQuestions(questions));\n    } else {\n      dispatch(getQuestions(_id));\n    }\n  };\n\n  return (\n    <Box sx={{ minWidth: 275, textAlign: `center` }}>\n      <Card variant=\"outlined\">\n        {' '}\n        <React.Fragment>\n          <CardContent>\n            <Typography\n              style={{ direction: `rtl` }}\n              className=\"cairo-ar\"\n              variant=\"h5\"\n              component=\"div\"\n            >\n              {level_ar} -{name_ar}\n            </Typography>\n            <br />\n            <Typography variant=\"h5\" component=\"div\">\n              {name_en} - {level_en}\n            </Typography>\n            <br />\n\n            <Typography\n              sx={{ fontSize: 14 }}\n              color=\"text.secondary\"\n              gutterBottom\n            >\n              {numberOfMinutes} minutes\n            </Typography>\n          </CardContent>\n          <CardActions\n            style={{ margin: `auto`, textAlign: `center` }}\n            className=\"flex justify-center items-center\"\n          >\n            <Button onClick={handleDisplayQuestions} size=\"large\">\n              View Questions\n            </Button>\n          </CardActions>\n        </React.Fragment>\n      </Card>\n    </Box>\n  );\n}\n","import React from 'react';\n\nfunction InputField({\n  name,\n  label,\n  onChange,\n  value,\n  className,\n  inputClassName,\n  inputStyle,\n}) {\n  return (\n    <div className={className}>\n      <label\n        htmlFor={name}\n        className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n      >\n        {label}\n      </label>\n      <input\n        type=\"text\"\n        name={name}\n        id={name}\n        value={value}\n        onChange={onChange}\n        className={\n          'bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500 ' +\n          inputClassName\n        }\n        placeholder={label}\n        required=\"\"\n        style={inputStyle}\n      />\n    </div>\n  );\n}\n\nexport default InputField;\n","import React, { useState, useRef, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport Button from '@mui/material/Button';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addQuestions, editQuestion } from '../../store/question/questionSlice';\nimport InputField from './InputField';\nimport { getLevelThunk } from '../../store/level/levelSlice';\n\nfunction AddEditQuestion({ questionId, levelId, oldQuestion, editMode }) {\n  // console.log(oldQuestion);\n  const layoutRef = useRef();\n  const formRef = useRef();\n\n  const [formData, setFormData] = useState({\n    value_ar: oldQuestion ? oldQuestion?.value?.ar : '',\n    value_en: oldQuestion ? oldQuestion?.value?.en : '',\n    levelId: levelId ? levelId : '',\n    wrong_ans_1_en: oldQuestion?.wrong_answers\n      ? oldQuestion?.wrong_answers[0]?.en\n      : '',\n    wrong_ans_1_ar: oldQuestion?.wrong_answers\n      ? oldQuestion?.wrong_answers[0]?.ar\n      : '',\n    wrong_ans_2_en: oldQuestion?.wrong_answers\n      ? oldQuestion?.wrong_answers[1]?.en\n      : '',\n    wrong_ans_2_ar: oldQuestion?.wrong_answers\n      ? oldQuestion?.wrong_answers[1]?.ar\n      : '',\n    wrong_ans_3_en: oldQuestion?.wrong_answers\n      ? oldQuestion?.wrong_answers[2]?.en\n      : '',\n    wrong_ans_3_ar: oldQuestion?.wrong_answers\n      ? oldQuestion?.wrong_answers[2]?.ar\n      : '',\n    wrong_ans_4_en: !!oldQuestion?.wrong_answers[3]\n      ? oldQuestion?.wrong_answers[3]?.en\n      : '',\n    wrong_ans_4_ar: !!oldQuestion?.wrong_answers[3]\n      ? oldQuestion?.wrong_answers[3]?.ar\n      : '',\n    correct_ans_en: oldQuestion?.wrong_answers\n      ? oldQuestion?.correct_answer?.en\n      : '',\n    correct_ans_ar: oldQuestion?.wrong_answers\n      ? oldQuestion?.correct_answer?.ar\n      : '',\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const isEmpty = Object.values({\n      ...formData,\n      wrong_ans_4_en: formData.wrong_ans_4_en\n        ? formData.wrong_ans_4_en\n        : 'temp',\n      wrong_ans_4_ar: formData.wrong_ans_4_ar\n        ? formData.wrong_ans_4_ar\n        : 'temp',\n    }).some((v) => !v);\n    if (isEmpty) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Error!',\n        text: 'All fields must be filled.',\n      });\n    } else {\n      if (!editMode) {\n        dispatch(addQuestions(formData));\n      } else {\n        dispatch(editQuestion({ ...formData, questionId }));\n      }\n      dispatch(getLevelThunk());\n    }\n  };\n  const dispatch = useDispatch();\n  const {\n    levels,\n    isError,\n    message,\n    isLoading: isLoadingLevel,\n  } = useSelector((s) => s.levels);\n  // const { currentQuestions, isLoading: isLoadingQuestions } = useSelector((s) => s.questions);\n\n  const setVisable = () => {\n    let layout = layoutRef.current;\n    let form = formRef.current;\n    layout.classList.remove('hidden');\n    form.classList.remove('hidden');\n    layout.classList.add('flex');\n  };\n\n  const setHidden = () => {\n    let layout = layoutRef.current;\n    let form = formRef.current;\n    layout.classList.remove('flex');\n    layout.classList.add('hidden');\n    form.classList.add('hidden');\n  };\n  const handleClickOutside = (event) => {\n    if (formRef.current && !formRef.current.contains(event.target)) {\n      setHidden();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n\n  return (\n    <>\n      {editMode ? (\n        <Button\n          variant=\"contained\"\n          startIcon={<EditIcon />}\n          onClick={setVisable}\n        >\n          Edit\n        </Button>\n      ) : (\n        <button\n          className=\"ml-auto mr-auto mb-10  block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n          type=\"button\"\n          onClick={setVisable}\n        >\n          Add New Question\n        </button>\n      )}\n\n      <div\n        style={{ zIndex: 1102 }}\n        id=\"crud-modal\"\n        tabIndex=\"-1\"\n        aria-hidden=\"true\"\n        ref={layoutRef}\n        className=\"  hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0  justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full bg-slate-300 bg-opacity-70\"\n      >\n        <div\n          ref={formRef}\n          className=\" hidden relative p-4 w-full max-w-7xl max-h-full m-auto\"\n        >\n          <div className=\"relative bg-white rounded-lg shadow dark:bg-gray-700\">\n            <div className=\"flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                {editMode ? 'Edit Question' : 'Create New Question'}\n              </h3>\n              <button\n                type=\"button\"\n                className=\"text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white\"\n                data-modal-toggle=\"crud-modal\"\n                onClick={setHidden}\n              >\n                <svg\n                  className=\"w-3 h-3\"\n                  aria-hidden=\"true\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  fill=\"none\"\n                  viewBox=\"0 0 14 14\"\n                >\n                  <path\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"2\"\n                    d=\"m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6\"\n                  />\n                </svg>\n                <span className=\"sr-only\">Close modal</span>\n              </button>\n            </div>\n            <form className=\"p-4 md:p-5\" onSubmit={handleSubmit}>\n              <div className=\"flex flex-col gap-4 mb-4 \">\n                <div className=\"flex flex-nowrap justify-center items-center gap-9 w-full\">\n                  <InputField\n                    label=\"English Value\"\n                    name=\"value_en\"\n                    value={formData.value_en}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                  />\n                  <InputField\n                    label=\"Arabic Value\"\n                    name=\"value_ar\"\n                    value={formData.value_ar}\n                    onChange={handleChange}\n                    className=\"w-100 \"\n                    inputClassName=\"rtl text-right\"\n                  />\n                </div>\n                <div className=\"flex flex-nowrap justify-center items-center gap-9 w-full\">\n                  <InputField\n                    label=\"First Wrong Answer English\"\n                    name=\"wrong_ans_1_en\"\n                    value={formData.wrong_ans_1_en}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                  />\n                  <InputField\n                    label=\"First Wrong Answer Arabic\"\n                    name=\"wrong_ans_1_ar\"\n                    value={formData.wrong_ans_1_ar}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                    inputClassName=\"rtl text-right\"\n                  />\n                </div>\n                <div className=\"flex flex-nowrap justify-center items-center gap-9 w-full\">\n                  <InputField\n                    label=\"Second Wrong Answer English\"\n                    name=\"wrong_ans_2_en\"\n                    value={formData.wrong_ans_2_en}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                  />\n                  <InputField\n                    label=\"Second Wrong Answer Arabic\"\n                    name=\"wrong_ans_2_ar\"\n                    value={formData.wrong_ans_2_ar}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                    inputClassName=\"rtl text-right\"\n                  />\n                </div>\n                <div className=\"flex flex-nowrap justify-center items-center gap-9 w-full\">\n                  <InputField\n                    label=\"Third Wrong Answer English\"\n                    name=\"wrong_ans_3_en\"\n                    value={formData.wrong_ans_3_en}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                  />\n                  <InputField\n                    label=\"Third Wrong Answer Arabic\"\n                    name=\"wrong_ans_3_ar\"\n                    value={formData.wrong_ans_3_ar}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                    inputClassName=\"rtl text-right\"\n                  />\n                </div>\n                <div className=\"flex flex-nowrap justify-center items-center gap-9 w-full\">\n                  <InputField\n                    label=\"Fourth Wrong Answer English\"\n                    name=\"wrong_ans_4_en\"\n                    value={formData.wrong_ans_4_en}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                  />\n                  <InputField\n                    label=\"Fourth Wrong Answer Arabic\"\n                    name=\"wrong_ans_4_ar\"\n                    value={formData.wrong_ans_4_ar}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                    inputClassName=\"rtl text-right\"\n                  />\n                </div>\n                <div className=\"flex flex-nowrap justify-center items-center gap-9 w-full\">\n                  <InputField\n                    label=\"Correct Answer English\"\n                    name=\"correct_ans_en\"\n                    value={formData.correct_ans_en}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                  />\n                  <InputField\n                    label=\"Correct Answer Arabic\"\n                    name=\"correct_ans_ar\"\n                    value={formData.correct_ans_ar}\n                    onChange={handleChange}\n                    className=\"w-100\"\n                    inputClassName=\"rtl text-right\"\n                  />\n                </div>\n\n                {!editMode && (\n                  <div className=\"col-span-2 sm:col-span-1\">\n                    <label\n                      htmlFor=\"level\"\n                      className=\"block mb-2 text-sm font-medium text-gray-900 dark:text-white\"\n                    >\n                      Level\n                    </label>\n                    <select\n                      name=\"levelId\"\n                      value={formData.levelId}\n                      onChange={handleChange}\n                      className=\"bg-gray-50 border w-100 border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500\"\n                    >\n                      <option selected=\"\">Select Level</option>\n                      {levels.map((level) => (\n                        <option key={level?._id} value={level?._id}>\n                          {level?.name_en}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                )}\n              </div>\n              <button\n                type=\"submit\"\n                className=\"text-white inline-flex items-center bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800\"\n              >\n                <svg\n                  className=\"me-1 -ms-1 w-5 h-5\"\n                  fill=\"currentColor\"\n                  viewBox=\"0 0 20 20\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    fill-rule=\"evenodd\"\n                    d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n                    clip-rule=\"evenodd\"\n                  ></path>\n                </svg>\n                {editMode ? 'Edit Question' : 'Add New Question'}\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AddEditQuestion;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\nimport Swal from 'sweetalert2';\nimport { deleteQuestion } from '../../store/question/questionSlice';\nimport { getLevelThunk } from '../../store/level/levelSlice';\nimport AddEditQuestion from './AddEditQuestion';\n\nexport default function QuestionElement({\n  _id,\n  correct_answer,\n  wrong_answers,\n  value,\n  id,\n  index,\n}) {\n  const dispatch = useDispatch();\n  const { currentQuestions, currentLevel, isLoading } = useSelector(\n    (state) => state.questions\n  );\n  const handleDelete = () => {\n    Swal.fire({\n      icon: 'question',\n      title: `Are you sure ?`,\n      iconHtml: '؟',\n      confirmButtonText: 'yes',\n      cancelButtonText: 'no',\n      showCancelButton: true,\n      showCloseButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          deleteQuestion({ questionId: _id, levelId: currentLevel?._id })\n        );\n        dispatch(getLevelThunk());\n      }\n    });\n  };\n  const handleEdit = () => {};\n  return (\n    <>\n      <h2 id={`accordion-color-heading-${id}-${index}`}>\n        <button\n          type=\"button\"\n          class=\"flex flex-wrap items-center justify-between w-full p-5 font-medium rtl:text-right text-gray-500 border border-b-0 border-gray-200 rounded-t-xl focus:ring-4 focus:ring-blue-200 dark:focus:ring-blue-800 dark:border-gray-700 dark:text-gray-400 hover:bg-blue-100 dark:hover:bg-gray-800 gap-3\"\n          data-accordion-target={`#accordion-color-body-${id}-${index}`}\n          aria-expanded=\"false\"\n          aria-controls={`accordion-color-body-${id}-${index}`}\n          onClick={() => {\n            const wantedElement = document.querySelector(\n              `#accordion-color-body-${id}-${index}`\n            );\n\n            document.querySelectorAll('.question-body').forEach((ele) => {\n              ele.style.display = 'none';\n              ele.classList.remove('hidden');\n            });\n\n            const currentDisplay = window\n              .getComputedStyle(wantedElement)\n              .getPropertyValue('display');\n            wantedElement.style.display =\n              currentDisplay === 'block' ? 'none' : 'block';\n          }}\n        >\n          <span\n            style={{\n              maxWidth: `97%`,\n              display: `inline-block`,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: `nowrap`,\n            }}\n          >\n            <span className=\" me-3\">\n              {index + 1} {')'}\n            </span>\n            {value?.en}\n          </span>\n          <div className=\"flex flex-row items-center gap-8\">\n            <div className=\"flex flex-row items-center gap-5\">\n              <Button\n                variant=\"contained\"\n                startIcon={<DeleteIcon />}\n                color=\"error\"\n                onClick={handleDelete}\n              >\n                Delete\n              </Button>\n              {/* <Button variant=\"contained\" startIcon={<EditIcon />} onClick={handleEdit}>\n                Edit\n              </Button> */}\n              <AddEditQuestion\n                editMode={true}\n                levelId={currentLevel?._id}\n                questionId={_id}\n                oldQuestion={{\n                  _id,\n                  value,\n                  correct_answer,\n                  wrong_answers,\n                }}\n              />\n            </div>\n\n            <svg\n              data-accordion-icon\n              class=\"w-3 h-3 rotate-180 shrink-0\"\n              aria-hidden=\"true\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 10 6\"\n            >\n              <path\n                stroke=\"currentColor\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 5 5 1 1 5\"\n              />\n            </svg>\n          </div>\n        </button>\n      </h2>\n      <div\n        id={`accordion-color-body-${id}-${index}`}\n        class=\"hidden question-body\"\n        aria-labelledby={`accordion-color-heading-${id}-${index}`}\n      >\n        <div class=\"p-5 border border-b-0 border-gray-200 dark:border-gray-700 dark:bg-gray-900\">\n          <h3 className=\"text-xl\">Question in Arabic</h3>\n          <span className=\"text-right rtl\">{value?.ar}</span>\n          <br></br>\n          <h3 className=\"text-xl\">Wrong answers (English) </h3>\n          <ul>\n            {wrong_answers?.map((wrong_answer) => (\n              <li>- {wrong_answer?.en}</li>\n            ))}\n          </ul>\n          <h3 className=\"text-xl\">Wrong answers (Arabic) </h3>\n          <ul>\n            {wrong_answers?.map((wrong_answer) => (\n              <li>- {wrong_answer?.ar}</li>\n            ))}\n          </ul>\n          <br></br>\n          <h3 className=\"text-xl\">Correct answers (English) </h3>-{' '}\n          <span className=\"text-lg text-green-400\">{correct_answer?.en}</span>\n          <br></br>\n          <h3 className=\"text-xl\">Correct answers (Arabic) </h3>-{' '}\n          <span className=\"text-lg text-green-400\">{correct_answer?.ar}</span>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport QuestionElement from './QuestionElement';\nimport Spinner from './../../components/Spinner';\n\nfunction QuestionsGroup() {\n  const { currentQuestions, isError, message, isLoading } = useSelector(\n    (s) => s.questions\n  );\n  return (\n    <div\n      id=\"accordion-color\"\n      data-accordion=\"collapse\"\n      data-active-classes=\"bg-blue-100 dark:bg-gray-800 text-blue-600 dark:text-white\"\n    >\n      {isLoading && <Spinner className=\"h-50\" />}\n      {!isLoading &&\n        Array.isArray(currentQuestions) &&\n        currentQuestions?.map((e, i) => (\n          <QuestionElement\n            // value_ar={e?.value_ar}\n            // value_en={e?.value_en}\n            {...e}\n            key={i}\n            id={i}\n            index={i}\n          />\n        ))}\n    </div>\n  );\n}\n\nexport default QuestionsGroup;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\n\nimport LevelCard from '../LevelCard';\nimport QuestionsGroup from '../QuestionsGroup';\nimport AddEditQuestion from '../AddEditQuestion';\nimport { getLevelThunk } from '../../../store/level/levelSlice';\nimport Spinner from '../../../components/Spinner';\n// ----------------------------------------------------------------------\nexport default function ProductsView() {\n  const { levels, levelIsSet, isError, message, isLoading } = useSelector(\n    (s) => s.levels\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getLevelThunk());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Typography variant=\"h4\" sx={{ mb: 5 }}>\n        Here You Can Customize The Questions 👋\n      </Typography>\n      {isLoading && <Spinner />}\n      {!isLoading && (\n        <>\n          <AddEditQuestion />\n          <div className=\"w-full flex justify-center items-center  gap-16 mb-8 flex-wrap\">\n            {levels.map((l) => (\n              <LevelCard\n                name_en={l?.name_en}\n                name_ar={l?.name_ar}\n                level_en={l?.level_en}\n                level_ar={l?.level_ar}\n                questions={l?.questions}\n                numberOfMinutes={l?.numberOfMinutes}\n                _id={l?._id}\n                level={l}\n              />\n            ))}\n          </div>\n          <QuestionsGroup />\n        </>\n      )}\n    </Container>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n\nimport { QuestionsView } from './../sections/questions/view';\n\n// ----------------------------------------------------------------------\n\nexport default function ProductsPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Questions </title>\n      </Helmet>\n\n      <QuestionsView />\n    </>\n  );\n}\n"],"names":["LevelCard","_ref","level_en","level_ar","level","_id","name_en","name_ar","numberOfMinutes","questions","questionsIsSet","useSelector","s","dispatch","useDispatch","_jsx","Box","sx","minWidth","textAlign","children","_jsxs","Card","variant","React","CardContent","Typography","style","direction","className","component","fontSize","color","gutterBottom","CardActions","margin","Button","onClick","handleDisplayQuestions","document","querySelectorAll","forEach","ele","display","classList","add","setCurrentLevel","setCurrentQuestions","getQuestions","size","name","label","onChange","value","inputClassName","inputStyle","htmlFor","type","id","placeholder","required","_oldQuestion$value","_oldQuestion$value2","_oldQuestion$wrong_an","_oldQuestion$wrong_an2","_oldQuestion$wrong_an3","_oldQuestion$wrong_an4","_oldQuestion$wrong_an5","_oldQuestion$wrong_an6","_oldQuestion$wrong_an7","_oldQuestion$wrong_an8","_oldQuestion$correct_","_oldQuestion$correct_2","questionId","levelId","oldQuestion","editMode","layoutRef","useRef","formRef","formData","setFormData","useState","value_ar","ar","value_en","en","wrong_ans_1_en","wrong_answers","wrong_ans_1_ar","wrong_ans_2_en","wrong_ans_2_ar","wrong_ans_3_en","wrong_ans_3_ar","wrong_ans_4_en","wrong_ans_4_ar","correct_ans_en","correct_answer","correct_ans_ar","handleChange","e","target","prevData","levels","isError","message","isLoading","isLoadingLevel","setVisable","layout","current","form","remove","setHidden","handleClickOutside","event","contains","useEffect","addEventListener","removeEventListener","_Fragment","startIcon","EditIcon","zIndex","tabIndex","ref","xmlns","fill","viewBox","stroke","d","onSubmit","preventDefault","Object","values","some","v","Swal","icon","title","text","editQuestion","addQuestions","getLevelThunk","InputField","selected","map","QuestionElement","index","currentQuestions","currentLevel","state","class","wantedElement","querySelector","currentDisplay","window","getComputedStyle","getPropertyValue","maxWidth","overflow","textOverflow","whiteSpace","DeleteIcon","handleDelete","iconHtml","confirmButtonText","cancelButtonText","showCancelButton","showCloseButton","then","result","isConfirmed","deleteQuestion","AddEditQuestion","wrong_answer","Spinner","Array","isArray","i","_createElement","key","ProductsView","levelIsSet","Container","mb","l","QuestionsGroup","ProductsPage","Helmet","QuestionsView"],"sourceRoot":""}